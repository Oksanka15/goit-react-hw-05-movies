{"version":3,"file":"static/js/387.43e298e4.chunk.js","mappings":"qTAEaA,EAAWC,EAAAA,GAAAA,GAAH,6LAQRC,EAAWD,EAAAA,GAAAA,GAAH,sHAORE,EAAYF,EAAAA,GAAAA,IAAH,uDAITG,EAAWH,EAAAA,GAAAA,EAAH,0C,SC4BrB,EAzCa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAc,mCAAG,8GAEKC,EAAAA,EAAAA,IAAaN,GAFlB,OAEbO,EAFa,OAGnBR,EAAQQ,GAHW,gDAKnBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAA,iBAAsB,KAAMC,QAA5B,iBANmB,yBAQnBR,GAAa,GARM,4EAAH,qDAWpBE,GACD,GAAE,CAACL,KAEF,iCACE,iCACCE,GACC,SAACU,EAAA,EAAD,KAEA,SAACpB,EAAD,UACGM,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UAA9B,OACR,UAACvB,EAAD,YACE,SAACC,EAAD,CAAWuB,IAAKC,EAAAA,EAAeJ,EAAcK,IAAKJ,KAClD,UAACpB,EAAD,eAAYoB,MACZ,UAACpB,EAAD,yBAAsBqB,OAHTH,EADP,OASd,SAAC,KAAD,MAGL,C,6EC7CYF,EAAS,WAClB,OACI,SAAC,KAAD,CACAS,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,OAAO,IACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,EACTC,UAAU,iBAIjB,C,mMCTDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,uBAAkC,CACnDG,OAAQ,CACNC,QAASH,EACTI,KAAM,KAJqB,cACzBC,EADyB,yBAOxBA,EAAKC,KAAKC,SAPc,2CAAH,qDAWjBC,EAAgB,mCAAG,WAAMC,GAAN,uFACTV,EAAAA,EAAAA,IAAA,8CACsBU,EADtB,+BAEjB,CACEP,OAAQ,CACNC,QAASH,EACTI,KAAM,KANgB,cACtBC,EADsB,yBAUrBA,EAAKC,KAAKC,SAVW,2CAAH,sDAahBG,EAAe,mCAAG,WAAMxC,GAAN,uFACR6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,oBAAyC,CAC1DgC,OAAQ,CACNC,QAASH,KAHc,cACrBK,EADqB,yBAMpBA,EAAKC,MANe,2CAAH,sDASb9B,EAAY,mCAAG,WAAMN,GAAN,uFACP6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,4BAAiD,CAClEgC,OAAQ,CACNC,QAASH,KAHa,cACpBK,EADoB,yBAMnBA,EAAKC,KAAKtC,MANS,2CAAH,sDASZ2C,EAAe,mCAAG,WAAMzC,GAAN,uFACV6B,EAAAA,EAAAA,IAAA,gBAAmB7B,EAAnB,4BAAiD,CAClEgC,OAAQ,CACNC,QAASH,KAHgB,cACvBK,EADuB,yBAMtBA,EAAKC,KAAKC,SANY,2CAAH,qD,uDCpDvB,IAAMlB,EAAe,iC","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Loader/Loader.jsx","components/servises/apiServises.js","components/servises/constants.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\nmargin-bottom: 10px;\npadding: 20px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n`\nexport const CastItem = styled.li`\npadding: 10px;\ndisplay: flex;\nheight: max-content;\nflex-direction: column;\nwidth: 300px;\n`\nexport const CastPhoto = styled.img`\nwidth: 200px;\nheight: 300px;\n`\nexport const CastText = styled.p`\nfont-size: 24px;\n`","import { useEffect, useState } from 'react';\nimport { getMovieCast } from 'components/servises/apiServises';\nimport { useParams } from 'react-router-dom';\nimport { BASE_IMG_URL } from 'components/servises/constants';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastText, CastPhoto, CastItem, CastList } from '../Cast/Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovieCast = async () => {\n      try {\n        const movieCast = await getMovieCast(id);\n        setCast(movieCast);\n      } catch (error) {\n        console.log(error);\n        toast.error(`Sorry, ${error.message}! Try again)`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [id]);\n  return (\n    <>\n      <h2>Cast</h2>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <CastList>\n          {cast.map(({ order, profile_path, name, character }) => (\n            <CastItem key={order}>\n              <CastPhoto src={BASE_IMG_URL + profile_path} alt={name} />\n              <CastText> {name}</CastText>\n              <CastText>Character: {character}</CastText>\n            </CastItem>\n          ))}\n        </CastList>\n      )}\n      <Toaster />\n    </>\n  );\n};\n\nexport default Cast;\n","import { Rings } from 'react-loader-spinner'\n\nexport const Loader = () => {\n    return (\n        <Rings \n        height=\"80\"\n        width=\"80\"\n        color='#4fa94d'\n        radius=\"6\"\n        wrapperStyle={{}}\n        wrapperClass=''\n        visible={true}\n        ariaLabel=\"rings-loading\"\n        />\n        )\n\n}","//API_KEY = d9a0cc661b661e7359674d300e5af663\n// https://api.themoviedb.org/3/movie/550?api_key=d9a0cc661b661e7359674d300e5af663\n//https://api.themoviedb.org/3/search/movie?&language=en-US&query=${query}&page=1&include_adult=false\n//movie/${id}?&language=en-US\n//export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'd9a0cc661b661e7359674d300e5af663';\n\nexport const getTrendingMovies = async () => {\n  const resp = await axios.get(`/trending/movie/day?`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    },\n  });\n  return resp.data.results;\n};\n\n\nexport const getMoviesByQuery = async query => {\n    const resp = await axios.get(\n      `/search/movie?&language=en-US&query=${query}&page=1&include_adult=false`,\n      {\n        params: {\n          api_key: API_KEY,\n          page: 1,\n        },\n      }\n    );\n    return resp.data.results;\n  };\n\nexport const getMovieDetails = async id => {\n    const resp = await axios.get(`movie/${id}?&language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return resp.data;\n  };\n  \n  export const getMovieCast = async id => {\n    const resp = await axios.get(`movie/${id}/credits?&language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return resp.data.cast;\n  };\n  \n  export const getMovieReviews = async id => {\n    const resp = await axios.get(`movie/${id}/reviews?&language=en-US`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return resp.data.results;\n  };","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["CastList","styled","CastItem","CastPhoto","CastText","useState","cast","setCast","id","useParams","isLoading","setIsLoading","useEffect","fetchMovieCast","getMovieCast","movieCast","console","log","toast","message","Loader","map","order","profile_path","name","character","src","BASE_IMG_URL","alt","height","width","color","radius","wrapperStyle","wrapperClass","visible","ariaLabel","axios","API_KEY","getTrendingMovies","params","api_key","page","resp","data","results","getMoviesByQuery","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}